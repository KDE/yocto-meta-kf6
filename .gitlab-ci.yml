# SPDX-License-Identifier: CC0-1.0
# SPDX-FileCopyrightText: none

include:
  - project: sysadmin/ci-utilities
    file:
      - /gitlab-templates/blocks/workflow.yml
      - /gitlab-templates/reuse-lint.yml

.yocto_base:
  stage: build
  image: storage.kde.org/vm-images/yocto-builder-noble
  tags:
    - LargeVM
    - amd64
  before_script:
    - repo init -u https://invent.kde.org/packaging/yocto-manifest.git -m scarthgap.xml
    - repo sync
  after_script:
    - cp -L build-visionfive2/tmp/log/cooker/visionfive2/console-latest.log bitbake.log
  artifacts:
    expire_in: 3 days
    when: always
    paths:
      - build-visionfive2/tmp/buildstats/
      - bitbake.log

yocto_scarthgap:
  extends: .yocto_base
  rules:
    - if: $CI_COMMIT_BRANCH != "master"
  script:
    - cd sources/meta-kf6/ && git checkout $CI_COMMIT_SHA && cd - && echo $CI_COMMIT_SHA
    - MACHINE=visionfive2 . ./setup-environment
    - echo 'SSTATE_MIRRORS = "file://.* file:///mnt/yocto_sstate_scarthgap/PATH"' >> conf/site.conf
    - echo 'INHERIT += "rm_work"' >> conf/site.conf
# limit computation: ncpus/4
    - echo 'BB_NUMBER_THREADS = "4"' >> conf/site.conf
    - echo 'OMP_NUM_THREADS = "4"' >> conf/site.conf
    - bitbake packagegroup-kf6-full

yocto_scarthgap_seeding:
  extends: .yocto_base
  rules:
    - if: $CI_COMMIT_BRANCH == "master"
  script:
    - MACHINE=visionfive2 . ./setup-environment
# host local cache
    - echo 'SSTATE_DIR = "/mnt/yocto_sstate_scarthgap"' >> conf/site.conf
    - echo 'INHERIT += "rm_work"' >> conf/site.conf
# limit computation: ncpus/4
    - echo 'BB_NUMBER_THREADS = "4"' >> conf/site.conf
    - echo 'OMP_NUM_THREADS = "4"' >> conf/site.conf
    - bitbake packagegroup-kf6-full

qa_testing:
  stage: test
  image: invent-registry.kde.org/sysadmin/ci-images/yocto-builder:latest
  script:
    - |-
        cat bitbake.log | grep -E "WARNING:|ERROR:" | grep -v "You are using a local hash equivalence server but have configured an sstate mirror" > bitbake.error || true
        if [[ -s bitbake.error ]]; then
            echo "Bitbake warnings detected:"
            cat bitbake.error
            exit 1
        else
            echo "No warnings detected"
        fi
  allow_failure: true
  artifacts:
    expire_in: 3 days
    when: always
    paths:
      - bitbake.error
